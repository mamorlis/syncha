#!/usr/bin/env perl

use strict;
use warnings;

use FindBin qw($Bin);
my $scripts = "$Bin/../lib";
use File::Basename;

use Getopt::Std;
use vars qw($opt_h $opt_i $opt_r $opt_o $opt_c $opt_t);

getopts('i:o:t:c:h');

my $usage =<<"USAGE";
usage: $0 [-h] -i tgr.d [-r chasenrc] [-o mod.d] [-c cab.d] [-t txt.d]
USAGE

die $usage if $opt_h;
die $usage unless $opt_i;

my $tgr_dir  = $opt_i;
my $txt_dir  = $opt_t ? $opt_t : "$tgr_dir/../txt";
my $cab_dir  = $opt_c ? $opt_c : "$tgr_dir/../cab";
my $mod_dir  = $opt_o ? $opt_o : "$tgr_dir/../mod";
my $chasenrc = $opt_r ? $opt_r : '/etc/chasenrc';

mkdir $txt_dir unless -d $txt_dir;
system("$scripts/ext_txt.pl -i $tgr_dir -o $txt_dir") == 0
    or die "Failed to exec ext_txt.pl:$!\n";

mkdir $cab_dir unless -d $cab_dir;
system("$scripts/ext_cab.pl -c $chasenrc -i $txt_dir -o $cab_dir") == 0
    or die "Failed to exec ext_cab.pl:$!\n";

mkdir $mod_dir unless -d $mod_dir;
system("$scripts/ext_mod.pl -c $cab_dir -t $tgr_dir -o $mod_dir") == 0
    or die "Failed to exec ext_mod.pl:$!\n";

__END__

=head1 NAME

ena-mkdata - Convert Tagrin file into Mod file

$Id$

=head1 SYNOPSYS

ena-mkdata [-h] -i tgr.d [-r chasenrc] [-o mod.d] [-c cab.d] [-t txt.d]

=head1 DESCRIPTION

Ena-mkdata converts Tagrin files into Mod files. It takes a name of the
directory which contains all the .tgr files. Note that Tagrin files must
be written in EUC-JP with LF newline.

=head1 OPTIONS

=over 4

=item -h

prints usage.

=item -r

specifies which chasenrc to use. (default: /etc/chasenrc)

=item -o

specifies a name of the directory to write mod files. (default: mod)

=item -c

specifies a name of the directory to write cabocha files. (default: cab)

=item -t

specifies a name of the directory to write text files. (default: txt)

=head1 SEE ALSO

ena-mkmodel, ena-learn, ena-tagger
