#!/usr/bin/env perl

=head1 NAME

ENA -- Event Noun Annotator

$Id$

Copyright (C) 2005-2007 Mamoru KOMACHI <mamoru-k@is.naist.jp>

=head1 SYNOPSIS

ena-tagger file.cab [file.svmmodel]

=head1 DESCRIPTION

Ena-tagger annotates even noun information to CaboCha format text data.
Annotation model is trained by ena-learn, and can be specified by the second
argument depending on the model you would like to use. (e.g. You may want to
use models from newswire for formal documents whereas you could also use
specific models for certain domain.)

=head1 REPORTING BUGS

Please report any bugs you encounter through our website:

B<http://syncha.sourceforge.jp/>

=head1 AUTHOR

Mamoru KOMACHI <mamoru-k@is.naist.jp>

=head1 SEE ALSO

ena-learn(1), ena-mkdata(1), ena-mkmodel(1)

=cut

use strict;
use warnings;

use Carp qw(croak carp);
use Data::Dumper;

use Getopt::Std;
use vars qw($opt_t);

use FindBin qw($Bin);
use lib "$Bin/../lib";
use ENA;
use ENA::Event;

use File::Temp qw(tempdir);
my $temp_dir = tempdir( CLEANUP => 1 );

my $usage = <<__USAGE__;
USAGE: $0 [-t toolkit] file.cab
__USAGE__

die $usage if @ARGV < 1;

# main
my $cab_file   = shift;
my $toolkit    = $opt_t || 'svm_light';
my $mod = Mod->new_file("$cab_file");
my $ena_event = new ENA::Event ($toolkit, $mod);
my $morph_id = 0;
for my $text (@{ $mod->txt }) {
    for my $sentence (@{ $text->Sentence }) {
        for my $segment (@{ $sentence->Bunsetsu }) {
            # XXX* output opinion separately
            print $segment->puts_bunsetsu_label;
            for my $morph (@{ $segment->Mor }) {
                # do not put newline
                print $morph->puts( NL => '' );

                # とりあえずサ変のみ
                # (本当は「動き」のようなものも入れたい)
                if ($morph->POS =~ m/^名詞-サ変/) {
                    print "\tEVENT" if $ena_event->is_event($morph_id);
                }
                print "\n";

                $morph_id++;
            }
        }
        print "EOS\n";
    }
}

1;
