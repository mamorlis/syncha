#!/usr/bin/env perl
#òµÌ¥ò³ò´

=head1 NAME

Syncha -- SYNtactic CHunck Annotator

=head1 SYNOPSIS

syncha [-a intraparam] [-e interparam] [-r chasenrc] [input-file(s)]

=head1 DESCRIPTION

Syncha is a Japanese syntactic chunck annotator. It detects predicate-
argument stricture of verb, adjective, and verbal noun. The task
includes:

=over 4

=item * recognize event nouns

=item * fill zero anaphora

=item * identify predicate-argument structure

=back

=head1 OPTIONS

=head2 -a

Specifies a threshold to find intra-sentential arguments. Defaults to 0.

=head2 -e

Specifies a threshold to find inter-sentential arguments.  Defaults to 0.

=head2 -r

Specifies flags to be passed to chasen. Defaults to '-j'.

=head1 BUGS

Please report any bugs you encounter through our website:

B<http://syncha.sourceforge.jp/>

=head1 AUTHORS

    Ryu Iida <ryu-i@is.naist.jp>
    Mamoru Komachi <mamoru-k@is.naist.jp>

=head1 SEE ALSO

chasen(1), mecab(1), cabocha(1)

=cut

use strict;
use warnings;

our $VERSION = qw(1.8);

use Carp qw(croak);
use File::Temp qw(tempfile tempdir);
use Getopt::Std;

my $usage =<<"__USAGE__";
USAGE: $0 [-a intraParam] [-e interParam] [-r chasenrc] [-hv1234] [input-file(s)]
__USAGE__

my %options;
getopts("a:e:hvr:s:1234", \%options);
die $usage if $options{h};
print "Syncha version $VERSION\n" and exit 0 if $options{v};

use FindBin qw($Bin);
chdir "$Bin/.." or croak "Cannot chdir to $Bin/..: $!";
my $resolve_zero = 'resolveZero/script/resolveZero.pl';
my $ena_tagger   = 'ena/bin/ena-tagger';
my $mugicha      = 'mugicha/bin/classify_hier.pl';
my $splitter     = 'bin/stc_splitter.pl';
my $chasen       = 'chasen';
my $chasen_flag  = $options{r} || '';
my $cabocha      = 'cabocha';
my $fix_id       = 'ena/lib/fix_id.pl';
my $intra_param  = $options{a} || 0;
my $inter_param  = $options{e} || 0;

local $/ = undef;
while (<>) {
    my $cab = `echo "$_" | sed -e "/^\$/d" | $splitter | $chasen $chasen_flag | $cabocha -I1 -f1`
        or croak "Cannot exec $cabocha:$!";
    if ($options{'1'}) {
        print $cab;
        exit 1;
    }

    my $dir = tempdir( CLEANUP => 1, );
    system("cp resolveZero/models/{model,fe}_* $dir") == 0
        or croak "Cannot exec cp resolveZero/models/:$!";
    my $zero_flag = "-d $dir -a ${intra_param} -e ${inter_param}";
    my $zero = `echo "$cab" | $resolve_zero $zero_flag`
        or croak "Cannot exec $resolve_zero:$!";
    if ($options{'2'}) {
        print $zero;
        exit 2;
    } else {
        chop $zero;
    }

    my $ena_flag = "-t tinysvm";
    my $ena = `echo "$zero" | $ena_tagger $ena_flag` or croak "Cannot exec $ena_tagger:$!";
    if ($options{'3'}) {
        print $ena;
        exit 3;
    } else {
        chop $ena;
    }

    my $mug_flag = "-f webcooc -b mugicha/data/ntc_train.svm.model -i ";
    my $mug = `echo "$ena" | $mugicha $mug_flag` or croak "Cannot exec $mugicha:$!";
    if ($options{'4'}) {
        print $mug;
        exit 4;
    } else {
        chop $mug;
    }

    my $result = `echo '$mug' | $fix_id` or croak "Cannot exec $fix_id:$!";
    print $result;
}
